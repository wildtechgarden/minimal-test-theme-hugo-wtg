---
name: build-and-deploy
# Assumes status checks have passed on a *required* pull request
# If you don't use that configuration you will have not CI as this
# workflow does not test (since the tests should already have pased).)
on:
  push:
    branches:
      - main
jobs:
  build-minified-site:
    runs-on: ubuntu-20.04
    steps:
      - name: "Build Site with Hugo and Audit"
        uses: danielfdickinson/build-audit-action-hugo-dfd@v0.2
        with:
          do-minify: true
          upload-site-as: minified-site
          use-lfs: false
          source-directory: exampleSite
  deploy-minified-site:
    needs: build-minified-site
    environment: production
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: minified-site
      - name: "Extract site and configs"
        shell: bash
        env:
          DOWNLOAD_SITE_FILENAME: hugo-site.tar
        run: tar -xf "${DOWNLOAD_SITE_FILENAME}"
      - name: "Install Rclone"
        run: |
          sudo apt-get update
          sudo apt-get install rclone
      - name: "Deploy minified site (rclone sync)"
        shell: bash
        env:
          RCLONE_ONE_FILE_SYSTEM: "true"
          RCLONE_ERROR_ON_NO_TRANSFER: "true"
          RCLONE_SFTP_SKIP_LINKS: "true"
          RCLONE_SFTP_KEY_FILE_PASS: "${{ secrets.DEPLOY_SFTP_KEY_PASS }}"
          RCLONE_SFTP_PORT: ${{ secrets.DEPLOY_SFTP_PORT }}
          RCLONE_SFTP_HOST: ${{ secrets.DEPLOY_SFTP_HOSTNAME }}
          SFTP_KEY_PEM: "${{ secrets.DEPLOY_SFTP_PRIVATE_KEY }}"
          REMOTE_PATH: "${{ secrets.DEPLOY_SFTP_REMOTE_PATH }}"
          RCLONE_SFTP_USER: ${{ secrets.DEPLOY_SFTP_USERNAME }}
        run: |
          eval "$(ssh-agent)"
          umask 177
          echo "${SFTP_KEY_PEM}" >~/sftp-key-file
          umask 0022
          export RCLONE_SFTP_KEY_FILE=~/sftp-key-file
          export RCLONE_ONE_FILE_SYSTEM RCLONE_ERROR_ON_NO_TRANSFER RCLONE_SFTP_SKIP_LINKS RCLONE_SFTP_KEY_FILE_PASS RCLONE_SFTP_PORT RCLONE_SFTP_HOST REMOTE_PATH RCLONE_SFTP_USER
          rclone sync public/ :sftp:${REMOTE_PATH}
