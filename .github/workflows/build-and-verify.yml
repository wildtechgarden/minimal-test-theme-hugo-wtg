---
name: build-and-verify
on: # yamllint disable-line
  pull_request:
    types:
      - assigned
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - "v[0-9]*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-verify-site:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        hugo: ["0.80.0", "0.88.1", "0.96.0", "latest"]
    steps:
      - uses: actions/checkout@v3
      - name: "Build site with Hugo and audit"
        uses: danielfdickinson/build-audit-action-hugo-dfd@v0.3
        with:
          build-for-downstream: "true"
          config-file: exampleSite/config.toml
          hugo-version: ${{ matrix.hugo }}
          output-directory: public-${{ matrix.hugo }}
          use-lfs: false
          source-directory: exampleSite
      - name: "Validate exampleSite HTML"
        uses: danielfdickinson/validate-html-action-hugo-dfd@v0.3
        with:
          action-workspace: ${{ github.workspace }}
          output-directory: public-${{ matrix.hugo }}
          use-existing-workspace: "true"
      - name: "Check internal links"
        uses: danielfdickinson/link-check-action-hugo-dfd@v0.3
        with:
          canonical-root: "https://minimal-test-theme.wildtechgarden.ca/"
          output-directory: public-${{ matrix.hugo }}
          entry-point: index.html
          upload-logs-as: check-links-failure
          upload-logs-retention: 3
          use-existing-workspace: "true"
  build-deploy-site:
    needs:
      - build-verify-site
    environment: deploytest
    runs-on: ubuntu-20.04
    steps:
      - name: "Build minified site with Hugo and audit"
        uses: danielfdickinson/build-audit-action-hugo-dfd@v0.3
        with:
          base-url: "https://deploy-test.thewildtechgarden.ca/"
          build-for-downstream: "true"
          config-file: exampleSite/config.toml
          do-minify-bundle: "true"
          hugo-env: deploytest
          use-lfs: false
          source-directory: exampleSite
      - name: "Install Rclone"
        run: |
          sudo apt-get update
          sudo apt-get install rclone
      - name: "Deploy minified site (rclone sync)"
        shell: bash
        env:
          RCLONE_ONE_FILE_SYSTEM: "true"
          RCLONE_ERROR_ON_NO_TRANSFER: "true"
          RCLONE_SFTP_SKIP_LINKS: "true"
          RCLONE_SFTP_KEY_FILE_PASS: "${{ secrets.DEPLOY_SFTP_KEY_PASS }}"
          RCLONE_SFTP_PORT: ${{ secrets.DEPLOY_SFTP_PORT }}
          RCLONE_SFTP_HOST: ${{ secrets.DEPLOY_SFTP_HOSTNAME }}
          SFTP_KEY_PEM: "${{ secrets.DEPLOY_SFTP_PRIVATE_KEY }}"
          REMOTE_PATH: "${{ secrets.DEPLOY_SFTP_REMOTE_PATH }}"
          RCLONE_SFTP_USER: ${{ secrets.DEPLOY_SFTP_USERNAME }}
          # yamllint disable rule:line-length
        run: |
          eval "$(ssh-agent)"
          umask 177
          echo "${SFTP_KEY_PEM}" >~/sftp-key-file
          umask 0022
          export RCLONE_SFTP_KEY_FILE=~/sftp-key-file
          export RCLONE_ONE_FILE_SYSTEM RCLONE_ERROR_ON_NO_TRANSFER RCLONE_SFTP_SKIP_LINKS RCLONE_SFTP_KEY_FILE_PASS RCLONE_SFTP_PORT RCLONE_SFTP_HOST REMOTE_PATH RCLONE_SFTP_USER
          rclone sync public/ :sftp:${REMOTE_PATH}
        # yamllint enable
